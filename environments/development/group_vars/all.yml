---
#non sensitive data, unencrypted
#splunk_uri_lm: https://lm1.tintin.website:8089
#splunk_uri_lm: https://bklif293.mgt.baerum.kommune.no:8089
splunk_uri_lm: "https://{{ groups['licensemaster'] | first }}:8089" # need to get in list
license_file_dir: "{{ role_path }}/files/"
license_file_name: "Splunk.License"
license_file_path: "{{ license_file_dir }}/{{ license_file_name }}"
#splunk_uri_cm: https://new_CM1.tintin.website:8089
splunk_uri_cm: https://{{ groups['clustermanager'] }}:8089
ansible_user: ansible
# ansible_ssh_private_key_file: "~/.ssh/id_ansiblekey"

git_server: git@github.com
git_project: duytrinh-boop
git_version: main
git_key: /home/tintin/.ssh/github_rsa
git_repositories:
  - repository: splunk_deployment_apps
  - repository: splunk_base_configurations # if enabled, splunk cluster will restart and data will be lost
    provision_only: true # safeguard to prevent accidental restarts
  - repository: splunk_parsing_indexing_searching_apps

# git_user: tintintrinh
# git_password: "{{ vault_git_password }}"
git_use_https: false


splunk_admin_username: admin

splunk_configure_secret: true # If set to true, you need to update files/splunk.secret
splunk_secret_file: splunk.secret # Used to specify your splunk.secret filename(s), files should be placed in the "files" folder of the role


splunk_package_url_uf: "https://download.splunk.com/products/universalforwarder/releases/9.0.4/linux/splunkforwarder-9.0.4-de405f4a7979-Linux-x86_64.tgz"
#splunk_package_url_uf: https://download.splunk.com/products/universalforwarder/releases/8.2.7/linux/splunkforwarder-8.2.7-2e1fca123028-Linux-x86_64.tgz
#splunk_package_url_uf: https://download.splunk.com/products/universalforwarder/releases/8.2.6/linux/splunkforwarder-8.2.6-a6fe1ee8894b-Linux-x86_64.tgz

default_local_app_path: "{{ role_path }}/files/local-apps" # path for local apps, but can be overridden in apps.yml with variable "local_path"
splunk_package_url_full: "https://download.splunk.com/products/splunk/releases/9.0.5/linux/splunk-9.0.5-e9494146ae5c-Linux-x86_64.tgz"
#splunk_package_url_full: https://download.splunk.com/products/splunk/releases/8.2.4/linux/splunk-8.2.4-87e2dda940d1-Linux-x86_64.tgz"

splunk_package_path: "~"
# splunk_package_full_upgrade is used when i want to manually upgrade splunk, and need to distribute the installation file to all full splunk nodes. See the playbook splunk_distributeInstallationFile.yml
splunk_package_full_upgrade: "{{ splunk_package_url_full | basename }}"
splunk_package_version: "{{ splunk_package_url_full | regex_search('(\\d+\\.\\d+\\.\\d+(?:\\.\\d+)?)') }}"


# predownloaded installation file variables
# use with variable "pre_downloaded_installation_file=true"
pre_downloaded_installation_file: true
pre_downloaded_installation_file_path : "{{ role_path }}/files/"
pre_downloaded_installation_filename : "splunk-9.0.5-e9494146ae5c-Linux-x86_64.tgz"

splunk_shc_label: tintins_sh_cluster


# sensitve data, encrypted
splunk_admin_password: "{{ vault_splunk_admin_password }}"
splunk_idxc_key: "{{ vault_splunk_idxc_key }}"
splunk_shc_key: "{{ vault_splunk_shc_key }}"
ldap_bind_dn_password: "{{ vault_ldap_bind_dn_password }}"
splunk_hec_token: "{{ vault_splunk_hec_token }}"
splunk_com_username: "tintintrinh"
splunk_com_password: "{{ vault_splunk_com_password }}"

# variables related to DBConnect Splunk app:
# add the following host-variable to the server designated to run dbconnect: install_dbconnect_on_server=true, in the host file
# e.g. splunk-dbc install_dbconnect_on_server=true
install_dbconnect_prerequisites: true # used with install_dbconnect_on_server, to first specify that dbconnect shall be installed, install_dbconnect_on_server specify on which server

######## CHRONY NTP specific Variables ##########
######## Use with playbook: ntp_chrony_setup #############
# Enable chrony for NTP time synchronization.
enable_chrony_ntp_sync: no                            # V-72269
#timezone
set_timezone: no
timezone: "Europe/Oslo"

# Use the following NTP servers.
security_ntp_servers:
  # - ntp.secsys.loc

# NTP server options.
security_ntp_server_options: iburst
# Configure Chrony to synchronize the hardware clock
security_ntp_sync_rtc: false
# Chrony limits access to clients that are on certain subnets.  Adjust the
# following subnets here to limit client access to chrony servers.
security_allowed_ntp_subnets:
  - 20/8

# Listen for NTP requests only on local interfaces.
security_ntp_bind_local_interfaces_only: no

# Look here for the admin password needed for chronyc.  The initial
# password is generated by a random process at install time.  You may
# change it if you wish.
# these are ubuntu specific. Need to make one for rhel machines as well
chrony_key_file: /etc/chrony/chrony.keys
chrony_service: chrony
chrony_conf_file: /etc/chrony/chrony.conf
